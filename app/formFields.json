{
	"MANDATORY_INVESTMENT" : {
		"common name" : "Mandatory investment",
		"description" : "This parameter determines the percentage of wealth (assets) that each defender must invest into security at the start of each round",
		"default": {
			"distribution" : "fixed",
			"val" : 0,
			"min" : 0,
			"max" : 1,
			"mean" :  0,
			"stddev" : 0.001
		},
		"constraints": {
			"min": 0,
			"max" : 1,
			"step" : 0.001,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"NUM_DEFENDERS" : {
		"common name" : "Initial number of defenders",
		"description" : "Number of Defender agents initialized at the start of simulation",
		"default": {
			"distribution" : "fixed",
			"val" : 50,
			"min" : 0,
			"max" : 500,
			"mean" : 50,
			"stddev" : 10
		},
		"constraints": {
			"min": 0,
			"max" : 500,
			"step" : 1,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"NUM_INSURERS" : {
		"common name" : "Initial number of insurers",
		"description" : "Number of Insurer agents initialized at the start of simulation",
		"default": {
			"distribution" : "fixed",
			"val" : 20,
			"min" : 0,
			"max" : 500,
			"mean" : 20,
			"stddev" : 10
		},
		"constraints": {
			"min": 0,
			"max" : 500,
			"step" : 1,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"NUM_ATTACKERS" : {
		"common name" : "Initial number of attackers",
		"description" : "Number of Attacker agents initialized at the start of simulation",
		"default": {
			"distribution" : "fixed",
			"val" : 5,
			"min" : 0,
			"max" : 500,
			"mean" : 5,
			"stddev" : 2
		},
		"constraints": {
			"min": 0,
			"max" : 500,
			"step" : 1,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"ATTACKS_PER_EPOCH" : {
		"common name" : "Attacks per round ",
		"description" : "The number of defenders that each attacker will attempt to attack each round",
		"default": {
			"distribution" : "fixed",
			"val" : 100,
			"min" : 0,
			"max" : 500,
			"mean" : 100,
			"stddev" : 10
		},
		"constraints": {
			"min": 0,
			"max" : 500,
			"step" : 1,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"RANSOM_B0" : {
		"common name" : "Ransom cost function parameter B0",
		"description" : "Parameter for determining ransom prices. Ransom = B0 + B1 * wealth",
		"default": {
			"distribution" : "fixed",
			"val" : 792145,
			"min": 0,
			"max": 1000000000,
			"mean": 792145,
			"stddev": 100000
		},
		"constraints": { 
			"min": 0,
			"max": 1000000000,
			"step": 1,
			"allowed_dists": ["fixed", "lognormal", "truncated_normal", "uniform"]
		}
	},
	"RANSOM_B1" : {
		"common name" : "Ransom cost function paramter B1",
		"description" : "Parameter for determining ransom prices. Ransom = B0 + B1 * wealth",
		"default": {		
			"distribution" : "fixed",
			"val" : 0.00121,
			"min" : 0,
			"max" : 1,
			"mean" : 0.00121,
			"stddev" : 0.00121
		},
		"constraints": {
			"min": 0,
			"max" : 1,
			"step" : 0.00001,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"RECOVERY_COST_BASE" : {
		"common name" : "Recovery cost function base parameter",
		"description" : "Parameter for determining cost of recovering from ransomware prices. Recovery cost = a * (wealth)^n",
		"default": {
			"distribution" : "fixed", 
			"val" : 230123,
			"min" : 0,
			"max" : 1000000000,
			"mean" : 230123,
			"stddev" : 230123
		},
		"constraints": {
			"min": 0,
			"max" : 1000000000,
			"step" : 1,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"RECOVERY_COST_EXP" : {
		"common name" : "Recovery cost function exponent parameter",
		"description" : "Parameter for determining cost of recovering from ransomware prices. Recovery cost = a * (wealth)^n",
		"default": {
			"distribution" : "fixed", 
			"val" : 0.125,
			"min" : 0,
			"max" : 1,
			"mean" : 0.125,
			"stddev" : 0.125
		},
		"constraints": {
			"min": 0,
			"max" : 1,
			"step" : 0.001,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"WEALTH" : {
		"common name" : "Initial wealth",
		"description" : "The distribution from which agents' initial wealth is drawn. Note that attackers' wealth is also subject to the \"Attacker inequality ratio\" scaling factor.",
		"default": {
			"distribution" : "lognormal",
			"val" : 3.113,
			"min" : 0,
			"max" : 10,
			"mean" : 3.113,
			"stddev" : 3.060
		},
		"constraints": {
			"min": 0,
			"max" : 10,
			"step" : 0.0001,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"INEQUALITY" : {
		"common name" : "Attacker inequality ratio",
		"description" : "Attackers are assumed to have less wealth on average than defenders. This parameter determines the relative amount of wealth between attackers and defenders", 
		"default": {
			"distribution" : "fixed",
			"val" : 0.001,
			"min": 0,
			"max": 1,
			"mean": 0.001,
			"stddev": 0.0001
		},
		"constraints": {
			"min": 0,
			"max": 1,
			"step": 0.0001,
			"allowed_dists": ["fixed", "lognormal", "normal", "truncated_normal", "uniform"]
		}		
	},
	"POSTURE" : {
		"common name" : "Security posture",
		"description" : "Defenders are initialized with a security posture ranging from 0 to 1. A posture of 0 indicates zero posture (all attacks will be successful) whereas a posture of 1 indicates perfect posture (no attacks will be successful). This is the distribution from which agents' initial security posture is drawn.",
		"default": {
			"distribution" : "truncated_normal",
			"val" : 0.28,
			"min" : 0,
			"max" : 1,
			"mean" : 0.28,
			"stddev" : 0.10

		},
		"constraints": {
			"min": 0,
			"max" : 1,
			"step" : 0.01,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"POSTURE_NOISE" : {
		"common name" : "Security posture noise",
		"description" : "When underwriting an insurance policy, insurers will take an audit of a defender's security posture to help calculate the policy premium and retention. We assume the audit process is subject to some amount of noise, determined by this distribution.",
		"default": {
			"distribution" : "normal",
			"val" : 0,
			"min" : -1,
			"max" : 1,
			"mean" : 0,
			"stddev" : 0.10
		},
		"constraints": {
			"min": -1,
			"max" : 1,
			"step" : 0.01,
			"allowed_dists" : ["fixed", "lognormal", "normal", "truncated_normal", "uniform"]
		}		
	},
	"NUM_QUOTES" : {
		"common name" : "Quotes requested per round",
		"description" : "Each round, defenders may request quotes on insurance policies from insurers chosen at random. This distribution determines the number of quotes each defender will seek each round.",
		"default": {
			"distribution" : "truncated_normal",
			"val" : 10,
			"min" : 0,
			"max" : 100,
			"mean" : 10,
			"stddev" : 2
		},
		"constraints": {
			"min": 0,
			"max" : 100,
			"step" : 1,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"LOSS_RATIO" : {
		"common name" : "Insurer loss ratio",
		"description" : "Insurers' operating loss ratio (i.e. the percentage of collected premiums paid out in claims)",
		"default": {
			"distribution" : "fixed",
			"val" : 0.80,
			"min" : 0,
			"max" : 1,
			"mean" : 0.80,
			"stddev" : 0.1
		},
		"constraints": {
			"min": 0,
			"max" : 1,
			"step" : 0.01,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"RETENTION_REGRESSION_FACTOR" : {
		"common name" : "Retention size scaling parameter",
		"description" : "In prior work we empirically find that retention (deductible) sizes can be expressed as a linear function of deductible size. This parameter determines the value of the scalar factor in this linear function.",
		"default": {
			"distribution" : "fixed",
			"val" : 25,
			"min" : 0,
			"max" : 1000,
			"mean" : 25,
			"stddev" : 10
		},
		"constraints": {
			"min": 0,
			"max" : 1000,
			"step" : 1,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"CTA_SCALING_FACTOR" : {
		"common name" : "Attack cost scaling factor",
		"description" : "A scaling factor in determining the amount an attacker must wager to attempt an attack on a given defender, given by wager = attack cost scaling factor * wealth * security posture",
		"default": {
			"distribution" : "fixed",
			"val" : 0.857,
			"min" : 0,
			"max" : 10,
			"mean" : 0.857,
			"stddev" : 0.2
		},
		"constraints": {
			"min": 0,
			"max" : 10,
			"step" : 0.001,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"DEPRECIATION" : {
		"common name" : "Capex depreciation",
		"description" : "Defenders' security investments are split between capital expenditures (capex) and operational expenses (opex). Opex investments are \"consumed\" upon spending but capex investments retain their value, subject each round to some amount of depreciation. This parameter determines the rate of decay of capex investments.",
		"default": {
			"distribution" : "fixed",
			"val" : 0.4,
			"min" : 0,
			"max" : 1,
			"mean" : 0.4,
			"stddev" : 0.1
		},
		"constraints": {
			"min": 0,
			"max" : 1,
			"step" : 0.01,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	},
	"INVESTMENT_SCALING_FACTOR" : {
		"common name" : "Security investment scaling factor",
		"description" : "Scaling factor for calculating security posture given investment x. This parameter is provisioned such that average real-world investments produce average real-world security posture. A higher investment scaling factor increases the effectivness of a security investment.",
		"default": {
			"distribution" : "fixed",
			"val" : 25,
			"min" : 0,
			"max" : 1000,
			"mean" :  25,
			"stddev" : 5
		},
		"constraints": {
			"min": 0,
			"max" : 1000,
			"step" : 1,
			"allowed_dists" : ["fixed", "lognormal", "truncated_normal", "uniform"]
		}		
	}
}
